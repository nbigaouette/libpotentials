#ifndef _CODE_FUNCTIONS_DECLARATIONS_HPP
#define _CODE_FUNCTIONS_DECLARATIONS_HPP

// FIXME: Please move out of library!!!
#define BODY 1
#define CELL 2
#define GHOST 3

/*
    This file contain declaration of functions that should
    be defined in the actual code, not the library, since they
    are code dependant.
*/

extern void Create_Electron(
        void *elv, void *ionv,
        const double time,
        const int &Nb_atoms, const int &Nb_atoms_max,
        int &Nb_electrons, const int &Nb_electrons_max,
        unsigned long int &index_first_empty_space,
        const elem_props &element,
        const char *msg);
extern void Set_Electron_Properties(void *, int);

extern size_t  Get_Sizeof_particle();

static inline void * get_voidp(void *p, int i)
{
    return (void *) (((unsigned char*) p)+(i*Get_Sizeof_particle()));
}

// **************************************************************
// Obtained running:
//      sed -n '/.*my_pattern1.*/,/.*my_pattern2.*/p' treestructures.h | sed -e "s|inline ||g" -e "s| {.*}|;|g"
// in same directory as "treestructures.h"

extern char *  Get_Name(void *b);
extern void    Print_name(void *b);

extern int     Get_Id(void *b);
extern void    Set_Id(void *b, int id);

extern int     Get_Indx(void *b);
extern void    Set_Indx(void *b, int i);

extern int     Get_Is_on(void *b);
extern void    Set_Is_on(void *b, int i);

extern int     Get_Charge_State(void *b);
extern void    Set_Charge_State(void *b, int cs);
extern double  Get_Charge(void *b);
extern void    Set_Charge(void *b, double c);
extern double  Get_Chargea(void *b);
extern void    Set_Chargea(void *b, double c);

extern double  Get_Mass(void *b);
extern void    Set_Mass(void *b, double m);

extern double* Get_Position(void *b);
extern void    Set_Position(void *b, double p[3]);
extern double* Get_Velocity(void *b);
extern void    Set_Velocity(void *b, double p[3]);

extern double  Get_Potential(void *b);
extern void    Set_Potential(void *b, double m);

extern double* Get_E(void *b);
extern void    Set_E(void *b, double E[3]);

extern int     Get_Type(void *b);
extern void    Set_Type(void *b, int t);

extern int     Get_NextIon(void *b);
extern void    Set_NextIon(void *b, double n);

extern int     Get_ClosestIon(void *b);
extern void    Set_ClosestIon(void *b, int i);

extern double  Get_ClosestIon_Distance(void *b);
extern void    Set_ClosestIon_Distance(void *b, double d);

extern int     Get_Nghb_id(void *b);
extern void    Set_Nghb_id(void *b, int i);

extern int     Get_Nghb_indx(void *b);
extern void    Set_Nghb_indx(void *b, int i);

extern int     Get_Rcb_mark(void *b);
extern void    Set_Rcb_mark(void *b, int i);

extern int     Get_Rcb_indx(void *b);
extern void    Set_Rcb_indx(void *b, int i);

extern int     Get_Imp_mark(void *b);
extern void    Set_Imp_mark(void *b, int i);

extern int     Get_Coll(void *b);
extern void    Set_Coll(void *b, int c);

extern char *  Get_Name(void *b);
extern void    Print_name(void *b);

extern double* Get_Efld(void *b);

extern short int Get_Excited_State_index(void *b);
extern void Set_Excited_State_index(void *b,short int i);
extern void Set_Excited_State_index(void *b,int i);


int   * Get_orbiting_electrons_Pointer(void *b);
void    Set_orbiting_electrons_Pointer(void *b, int *p);

int     Get_orbiting_electrons_Size();

// **************************************************************

#endif // #ifndef _CODE_FUNCTIONS_DECLARATIONS_HPP

// ********** End of file ***************************************
