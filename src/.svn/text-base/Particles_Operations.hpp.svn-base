#ifndef INC_PARTICLES_OPERATIONS_HPP
#define INC_PARTICLES_OPERATIONS_HPP

#include "General.hpp"

#define Ef(x,o)       (double *(x+o))

int ** Find_Classical_Electrons(void *al, void *el,
                                  const int t,
                                  const int &Nb_atoms, const int &Nb_atoms_max,
                                  int &Nb_electrons, const int &Nb_electrons_max);

double Get_Average_N(void *ion);
double Get_aq_Factor(void *ion);

void Set_Ids_and_Index(
        void *al, void *el,
        const int &Nb_atoms, const int &Nb_electrons);

void Ionization_ParticleList_Defragmentation(void *pl, const int Nb_particle_max);

int Ionization_Recombine_Electron_With_Ion(
        void *e, void *ion,
        void *al, void *el,
        const int &Nb_atoms, const int &Nb_atoms_max,
        int &Nb_electrons, const int &Nb_electrons_max,
        const elem_props &element);

double Recombination_Get_Delta_E(
        void *e, void *ion,
        void *al, void *el,
        const int &Nb_atoms, const int &Nb_atoms_max,
        int &Nb_electrons, const int &Nb_electrons_max,
        const elem_props &element);

double Ionization_Get_Delta_E(
        void *e, void *ion,
        void *al, void *el,
        const int &Nb_atoms, const int &Nb_atoms_max,
        int &Nb_electrons, const int &Nb_electrons_max,
        const elem_props &element);

int Ionization_Recombination(
        void *el, void *al,
        const int &Nb_atoms, const int &Nb_atoms_max,
        int &Nb_electrons, const int &Nb_electrons_max,
        const double time, const int t,
        const elem_props &element,
        bool &did_recombination_occured,FILE *fh_out);

int Ionization_Delete_Particle(void *particle);

void Ionization_Print(
        void *al, void *el,
        const int &t,
        const int &Nb_atoms, const int &Nb_atoms_max,
        const int &Nb_electrons, const int &Nb_electrons_max);

void test_for_classically_orbiting_electrons(int **ion_list,void *al,
                                              int Nb_electrons, int Nb_atoms);
double Get_Potential_From_Orbiting_Electrons(void *p, void *al,
                                           int *electron_list,
                                           const elem_props &element,
                                           int dont_include_Id);
double Get_Total_Kinetic_Energy_of_Orbiting_Electrons(void *al,
                                                       int *electron_list,
                                                       const int dont_include_Id);
void Remove_IpCorrection_From_Orbiting_Electrons(void *al,
                                                  int *electron_list,
                                                  const double Ip_correction,
                                                  const double K_OrbitingE,
                                                  const int dont_include_Id);
int remove_orbiting_electrons_from_part(void *part, void *al,
                                         int * electron_list,
                                         double *pot_at_the_particle,
                                         const elem_props &element,
                                         int dont_include_Id);
int correct_ghost_pot_by_binding_orbiting_elec(int num_clasical_orbiting_el,
                                                void *ion, void *ghost,
                                                const elem_props &element,
                                                double *pot_at_the_ghost);
double calc_rel_Ekin(double vv[3], double *vv2);
double calc_vv(double Ekin_au);

#endif // INC_PARTICLES_OPERATIONS_HPP

// ********** End of file ***************************************
